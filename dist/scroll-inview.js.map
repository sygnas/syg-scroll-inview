{"version":3,"file":"scroll-inview.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * Scroll in viewport add data attribute\n * スクロールしてビューポートに入ったらdata属性を与える\n *\n * @author   Hiroshi Fukuda <info.sygnas@gmail.com>\n * @license  MIT\n */\n\n\nimport { TTargetItem, TTargetList } from \"./types\";\n\nconst ATTR_INVIEW: string = 'data-inview';\nconst ATTR_ROOT: string = 'data-inview-root';\nconst ATTR_MARGIN: string = 'data-inview-rootMargin';\nconst ATTR_THRESHOLD: string = 'data-inview-threshold';\n\nconst DEFAULT: IntersectionObserverInit = {\n  root: null,\n  rootMargin: '0px',\n  threshold: 0,\n};\n\n/**\n * in view controller\n */\nexport default class {\n\n  private targetList: TTargetList;\n  private opt: IntersectionObserverInit;\n\n  /**\n   * コンストラクタ\n   * ターゲット一覧を精査して、 data-inview-root、data-inview-rootMargin、data-inview-threshold が設定されていないか確認する。\n   * 上記属性毎に observer を作成する。\n   */\n  constructor(target: string, option: IntersectionObserverInit = {}) {\n    this.targetList = {};\n    this.opt = Object.assign(DEFAULT, option);\n\n    document.querySelectorAll<HTMLElement>(target).forEach((target: HTMLElement)=>{\n      this.initTargetList(target);\n    });\n  }\n\n  /**\n   * ターゲットとオプションの管理リストを作成\n   */\n  private initTargetList(target: HTMLElement): void {\n    // 監視対象エレメントに独自指定があればそちらを使う。\n    // 無ければオプション設定を使う\n    const root = target.getAttribute(ATTR_ROOT) || this.opt.root;\n    const rootMargin: string = target.getAttribute(ATTR_MARGIN) || this.opt.rootMargin as string;\n    const threshold: number = Number(target.getAttribute(ATTR_THRESHOLD)) || this.opt.threshold as number;\n    const key: string = `${root}-${rootMargin}-${threshold}`;\n\n    if (key in this.targetList === false){\n      const option: IntersectionObserverInit = {\n        root: root as HTMLElement,\n        rootMargin: rootMargin,\n        threshold: threshold,\n      };\n      const observer: IntersectionObserver = new IntersectionObserver(this.observerCallback, option);\n\n      this.targetList[key] = {\n        list: [],\n        observer\n      };\n    }\n    this.targetList[key].list.push(target);\n  }\n\n  /**\n   * スクロール検知処理を開始\n   */\n   public start(): void {\n    Object.keys(this.targetList).forEach(key => {\n      const targetObj = this.targetList[key];\n\n      targetObj.list.forEach(target => {\n        targetObj.observer.observe(target);\n      });\n    });\n  }\n\n  /**\n   * 画面に入ったら ATTR_INVIEW のdata属性に true を入れる。\n   * オブザーバーから監視解除される。\n   */\n   private observerCallback(entries: IntersectionObserverEntry[], observer: IntersectionObserver): void {\n    entries.forEach(entry => {\n      if(!entry.isIntersecting) return;\n\n      observer.unobserve(entry.target);\n      entry.target.setAttribute(ATTR_INVIEW, 'true');\n    });\n  }\n}\n\n\n"],"names":["ATTR_INVIEW","ATTR_ROOT","ATTR_MARGIN","ATTR_THRESHOLD","DEFAULT","root","rootMargin","threshold","target","option","targetList","opt","Object","assign","document","querySelectorAll","forEach","initTargetList","getAttribute","Number","key","observer","IntersectionObserver","observerCallback","list","push","keys","targetObj","observe","entries","entry","isIntersecting","unobserve","setAttribute"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;;;;;;;EAWA,IAAMA,WAAW,GAAW,aAA5B;EACA,IAAMC,SAAS,GAAW,kBAA1B;EACA,IAAMC,WAAW,GAAW,wBAA5B;EACA,IAAMC,cAAc,GAAW,uBAA/B;EAEA,IAAMC,OAAO,GAA6B;EACxCC,EAAAA,IAAI,EAAE,IADkC;EAExCC,EAAAA,UAAU,EAAE,KAF4B;EAGxCC,EAAAA,SAAS,EAAE;EAH6B,CAA1C;EAMA;;;;;EAQE;;;;;EAKA,oBAAYC,MAAZ;;;UAA4BC,6EAAmC;;;;;;;;EAC7D,SAAKC,UAAL,GAAkB,EAAlB;EACA,SAAKC,GAAL,GAAWC,MAAM,CAACC,MAAP,CAAcT,OAAd,EAAuBK,MAAvB,CAAX;EAEAK,IAAAA,QAAQ,CAACC,gBAAT,CAAuCP,MAAvC,EAA+CQ,OAA/C,CAAuD,UAACR,MAAD;EACrD,MAAA,KAAI,CAACS,cAAL,CAAoBT,MAApB;EACD,KAFD;EAGD;EAED;;;;;;;aAGQ,wBAAeA,MAAf;EACN;EACA;EACA,UAAMH,IAAI,GAAGG,MAAM,CAACU,YAAP,CAAoBjB,SAApB,KAAkC,KAAKU,GAAL,CAASN,IAAxD;EACA,UAAMC,UAAU,GAAWE,MAAM,CAACU,YAAP,CAAoBhB,WAApB,KAAoC,KAAKS,GAAL,CAASL,UAAxE;EACA,UAAMC,SAAS,GAAWY,MAAM,CAACX,MAAM,CAACU,YAAP,CAAoBf,cAApB,CAAD,CAAN,IAA+C,KAAKQ,GAAL,CAASJ,SAAlF;EACA,UAAMa,GAAG,aAAcf,IAAd,cAAsBC,UAAtB,cAAoCC,SAApC,CAAT;;EAEA,UAAIa,GAAG,IAAI,KAAKV,UAAZ,KAA2B,KAA/B,EAAqC;EACnC,YAAMD,MAAM,GAA6B;EACvCJ,UAAAA,IAAI,EAAEA,IADiC;EAEvCC,UAAAA,UAAU,EAAEA,UAF2B;EAGvCC,UAAAA,SAAS,EAAEA;EAH4B,SAAzC;EAKA,YAAMc,QAAQ,GAAyB,IAAIC,oBAAJ,CAAyB,KAAKC,gBAA9B,EAAgDd,MAAhD,CAAvC;EAEA,aAAKC,UAAL,CAAgBU,GAAhB,IAAuB;EACrBI,UAAAA,IAAI,EAAE,EADe;EAErBH,UAAAA,QAAQ,EAARA;EAFqB,SAAvB;EAID;;EACD,WAAKX,UAAL,CAAgBU,GAAhB,EAAqBI,IAArB,CAA0BC,IAA1B,CAA+BjB,MAA/B;EACD;EAED;;;;;;aAGQ;;;EACNI,MAAAA,MAAM,CAACc,IAAP,CAAY,KAAKhB,UAAjB,EAA6BM,OAA7B,CAAqC,UAAAI,GAAG;EACtC,YAAMO,SAAS,GAAG,MAAI,CAACjB,UAAL,CAAgBU,GAAhB,CAAlB;EAEAO,QAAAA,SAAS,CAACH,IAAV,CAAeR,OAAf,CAAuB,UAAAR,MAAM;EAC3BmB,UAAAA,SAAS,CAACN,QAAV,CAAmBO,OAAnB,CAA2BpB,MAA3B;EACD,SAFD;EAGD,OAND;EAOD;EAED;;;;;;;aAIS,0BAAiBqB,OAAjB,EAAuDR,QAAvD;EACPQ,MAAAA,OAAO,CAACb,OAAR,CAAgB,UAAAc,KAAK;EACnB,YAAG,CAACA,KAAK,CAACC,cAAV,EAA0B;EAE1BV,QAAAA,QAAQ,CAACW,SAAT,CAAmBF,KAAK,CAACtB,MAAzB;EACAsB,QAAAA,KAAK,CAACtB,MAAN,CAAayB,YAAb,CAA0BjC,WAA1B,EAAuC,MAAvC;EACD,OALD;EAMD;;;;;;;;;;;;"}