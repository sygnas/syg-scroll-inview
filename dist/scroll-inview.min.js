var sygScrollInview=function(){"use strict";
/**
     * Scroll in viewport add data attribute
     * スクロールしてビューポートに入ったらdata属性を与える
     *
     * @author   Hiroshi Fukuda <info.sygnas@gmail.com>
     * @license  MIT
     */var t={root:null,rootMargin:"0px",threshold:0};return function(){function r(r,i){var e=this;void 0===i&&(i={}),this.targetList={},this.opt=Object.assign(t,i),document.querySelectorAll(r).forEach((function(t){e.initTargetList(t)}))}return r.prototype.initTargetList=function(t){var r=t.getAttribute("data-inview-root")||this.opt.root,i=t.getAttribute("data-inview-rootMargin")||this.opt.rootMargin,e=Number(t.getAttribute("data-inview-threshold"))||this.opt.threshold,o="".concat(r,"-").concat(i,"-").concat(e);if(o in this.targetList==!1){var n={root:r,rootMargin:i,threshold:e},s=new IntersectionObserver(this.observerCallback,n);this.targetList[o]={list:[],observer:s}}this.targetList[o].list.push(t)},r.prototype.start=function(){var t=this;Object.keys(this.targetList).forEach((function(r){var i=t.targetList[r];i.list.forEach((function(t){i.observer.observe(t)}))}))},r.prototype.observerCallback=function(t,r){t.forEach((function(t){t.isIntersecting&&(r.unobserve(t.target),t.target.setAttribute("data-inview","true"))}))},r}()}();
